/*
 * This file is part of the Code::Blocks IDE and licensed under the GNU General Public License, version 3
 * http://www.gnu.org/licenses/gpl-3.0.html
 *
 * $Revision: 9064 $
 * $Id: config.script 9064 2013-05-09 02:31:00Z ollydbg $
 * $HeadURL: http://svn.code.sf.net/p/codeblocks/code/branches/release-16.xx/src/plugins/scriptedwizard/resources/config.script $
 */

//
// Main wizards configuration script.
// Here, we register all the available wizards.
//

function RegisterWizards()
{
    //
    // project wizards
    //
    RegisterWizard(wizProject,     wxT_2("empty"),        wxT_2("Empty project"),         wxT_2("Console"));
    RegisterWizard(wizProject,     wxT_2("fortran/app"),  wxT_2("Fortran application"),   wxT_2("Fortran"));
    RegisterWizard(wizProject,     wxT_2("fortran/lib"),  wxT_2("Fortran library"),       wxT_2("Fortran"));
    RegisterWizard(wizProject,     wxT_2("fortran/dll"),  wxT_2("Fortran DLL"),           wxT_2("Fortran"));
    RegisterWizard(wizProject,     wxT_2("console"),      wxT_2("Console application"),   wxT_2("Console"));
    RegisterWizard(wizProject,     wxT_2("d"),            wxT_2("D application"),         wxT_2("D language"));
    if (PLATFORM == PLATFORM_MSW)
    {
        RegisterWizard(wizProject, wxT_2("directx"),      wxT_2("Direct/X project"),      wxT_2("2D/3D Graphics"));
        RegisterWizard(wizProject, wxT_2("dll"),          wxT_2("Dynamic Link Library"),  wxT_2("Console"));
        RegisterWizard(wizProject, wxT_2("sys"),          wxT_2("Kernel Mode Driver"),    wxT_2("Native"));
    }
    RegisterWizard(wizProject,     wxT_2("fltk"),         wxT_2("FLTK project"),          wxT_2("GUI"));
    RegisterWizard(wizProject,     wxT_2("glfw"),         wxT_2("GLFW project"),          wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("glut"),         wxT_2("GLUT project"),          wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("gtk"),          wxT_2("GTK+ project"),          wxT_2("GUI"));
    RegisterWizard(wizProject,     wxT_2("irrlicht"),     wxT_2("Irrlicht project"),      wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("lf"),           wxT_2("Lightfeather project"),  wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("matlab_csf"),   wxT_2("Matlab project"),        wxT_2("Console"));
    RegisterWizard(wizProject,     wxT_2("opencv"),       wxT_2("OpenCV project"),        wxT_2("Console"));
    RegisterWizard(wizProject,     wxT_2("opengl"),       wxT_2("OpenGL project"),        wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("ogre"),         wxT_2("Ogre project"),          wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("plugins"),      wxT_2("Code::Blocks plugin"),   wxT_2("Code::Blocks"));
    RegisterWizard(wizProject,     wxT_2("qt4"),          wxT_2("QT4 project"),           wxT_2("GUI"));
    RegisterWizard(wizProject,     wxT_2("sdl"),          wxT_2("SDL project"),           wxT_2("2D/3D Graphics"));
    RegisterWizard(wizProject,     wxT_2("sfml"),         wxT_2("SFML project"),          wxT_2("2D/3D Graphics"));
    if (PLATFORM == PLATFORM_MSW)
        RegisterWizard(wizProject, wxT_2("smartwin"),     wxT_2("SmartWin project"),      wxT_2("GUI"));
    RegisterWizard(wizProject,     wxT_2("staticlib"),    wxT_2("Static library"),        wxT_2("Console"));
    if (PLATFORM == PLATFORM_MSW)
        RegisterWizard(wizProject, wxT_2("stlport"),      wxT_2("STL port application"),  wxT_2("Console"));
    RegisterWizard(wizProject,     wxT_2("sharedlib"),    wxT_2("Shared library"),        wxT_2("Console"));
    if (PLATFORM == PLATFORM_MSW)
        RegisterWizard(wizProject, wxT_2("win32gui"),     wxT_2("Win32 GUI project"),     wxT_2("GUI"));
    RegisterWizard(wizProject,     wxT_2("wxwidgets"),    wxT_2("wxWidgets project"),     wxT_2("GUI"));

    //
    // build target wizards
    //
    RegisterWizard(wizTarget,      wxT_2("console"),      wxT_2("Console"),               wxT_2("Console"));
    RegisterWizard(wizTarget,      wxT_2("staticlib"),    wxT_2("Static library"),        wxT_2("Console"));
    if (PLATFORM == PLATFORM_MSW)
        RegisterWizard(wizTarget,  wxT_2("dll"),          wxT_2("Dynamic Link Library"),  wxT_2("Console"));
    RegisterWizard(wizTarget,      wxT_2("wxwidgets"),    wxT_2("wxWidgets"),             wxT_2("GUI"));

    RegisterWizard(wizProject,     wxT_2("arm"),          wxT_2("ARM Project"),           wxT_2("Embedded Systems"));
    RegisterWizard(wizProject,     wxT_2("avr"),          wxT_2("AVR Project"),           wxT_2("Embedded Systems"));
    RegisterWizard(wizProject,     wxT_2("tricore"),      wxT_2("TriCore Project"),       wxT_2("Embedded Systems"));
    RegisterWizard(wizProject,     wxT_2("ppc"),          wxT_2("PowerPC Project"),       wxT_2("Embedded Systems"));
    RegisterWizard(wizProject,     wxT_2("mcs51"),        wxT_2("MCS51 Project"),         wxT_2("Embedded Systems"));
    //
    // file wizards
    //
    RegisterWizard(wizFiles,       wxT_2("empty_file"),   wxT_2("Empty file"),            wxT_2("C/C++"));
    RegisterWizard(wizFiles,       wxT_2("c_file"),       wxT_2("C/C++ source"),          wxT_2("C/C++"));
    RegisterWizard(wizFiles,       wxT_2("h_file"),       wxT_2("C/C++ header"),          wxT_2("C/C++"));
    RegisterWizard(wizFiles,       wxT_2("fortran/file"), wxT_2("Fortran source"),        wxT_2("Fortran"));
}

function RegisterWizard(type, folder, title, category)
{
    // syntax:
    // AddWizard(type, title, category, script, template_png, wizard_png, xrc)

    Wizard.AddWizard(type,
                     title,
                     category,
                     folder + wxT_2("/wizard.script"),
                     folder + wxT_2("/logo.png"),
                     folder + wxT_2("/wizard.png"),
                     folder + wxT_2("/wizard.xrc"));
}
